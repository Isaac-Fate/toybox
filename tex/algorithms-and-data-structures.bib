@book{bhattacharjeePracticalMachineLearning2020,
  title = {Practical Machine Learning with {{Rust}}: Creating Intelligent Applications in {{Rust}}},
  shorttitle = {Practical Machine Learning with {{Rust}}},
  author = {Bhattacharjee, Joydeep},
  year = {2020},
  publisher = {Apress},
  address = {Berkeley, CA},
  isbn = {978-1-4842-5120-1},
  langid = {english},
  file = {/Users/isaac/Zotero/storage/PBUISVQQ/Bhattacharjee - 2020 - Practical machine learning with Rust creating int.pdf}
}

@book{blandyProgrammingRustFast2017,
  title = {Programming {{Rust}}: Fast, Safe Systems Development},
  shorttitle = {Programming {{Rust}}},
  author = {Blandy, Jim and Orendorff, Jason},
  year = {2017},
  edition = {First edition},
  publisher = {O'Reilly Media},
  address = {Sebastopol, California},
  abstract = {"Rust is a new systems programming language that combines the performance and low-level control of C and C++ with memory safety and thread safety. Rust's modern, flexible types ensure your program is free of null pointer dereferences, double frees, dangling pointers, and similar bugs, all at compile time, without runtime overhead. In multi-threaded code, Rust catches data races at compile time, making concurrency much easier to use. Written by two experienced systems programmers, this book explains how Rust manages to bridge the gap between performance and safety, and how you can take advantage of it"--Page 4 of cover},
  isbn = {978-1-4919-2728-1},
  lccn = {QA76.73.R87 B58 2017},
  keywords = {Programming languages (Electronic computers)},
  annotation = {OCLC: on1019128949},
  file = {/Users/isaac/Zotero/storage/LSFUJWYJ/Blandy_Orendorff_2017_Programming Rust.pdf}
}

@book{chapagainHandsonWebScraping2019,
  title = {Hands-on Web Scraping with {{Python}}: Perform Advanced Scraping Operations Using Various {{Python}} Libraries and Tools Such as {{Selenium}}, {{Regex}}, and Others},
  shorttitle = {Hands-on Web Scraping with {{Python}}},
  author = {Chapagain, Anish},
  year = {2019},
  publisher = {Packt Publishing, Limited},
  address = {Birmingham},
  abstract = {Web scraping is an essential technique used in many organizations to scrape valuable data from web pages. This book will help you master web scraping techniques and methodologies using Python libraries and other popular tools such as Selenium. By the end of this book, you will have learned how to efficiently scrape different websites},
  isbn = {978-1-78953-339-2},
  langid = {english},
  file = {/Users/isaac/Zotero/storage/47KLBT5E/Chapagain - 2019 - Hands-on web scraping with Python perform advance.pdf}
}

@book{cormenIntroductionAlgorithms2009,
  title = {Introduction to Algorithms},
  editor = {Cormen, Thomas H.},
  year = {2009},
  edition = {3rd ed},
  publisher = {MIT Press},
  address = {Cambridge, Mass},
  isbn = {978-0-262-03384-8 978-0-262-53305-8},
  langid = {english},
  lccn = {QA76.6 .C662 2009},
  keywords = {Computer algorithms,Computer programming},
  annotation = {OCLC: ocn311310321},
  file = {/Users/isaac/Zotero/storage/KYF8HWNI/Cormen - 2009 - Introduction to algorithms.pdf}
}

@book{eshwarlaPracticalSystemProgramming2021,
  title = {Practical System Programming for Rust Developers Build Fast and Secure Software for {{Linux}}/{{Unix}} Systems with the Help of Practical Examples},
  author = {Eshwarla, Prabhu},
  year = {2021},
  publisher = {Packt Publishing},
  address = {Place of publication not identified},
  isbn = {978-1-80056-096-3},
  langid = {english},
  annotation = {OCLC: 1266649260},
  file = {/Users/isaac/Zotero/storage/FERGZZQJ/Eshwarla - 2021 - Practical system programming for rust developers b.pdf}
}

@book{haldarSQLite2007,
  title = {Inside {{SQLite}}},
  author = {Haldar, Sibsankar},
  year = {2007},
  publisher = {O'Reilly},
  address = {Sebastopol, Calif.},
  isbn = {978-0-596-55006-6},
  langid = {english},
  annotation = {OCLC: 154684387},
  file = {/Users/isaac/Zotero/storage/68BJSYIT/Haldar - 2007 - Inside SQLite.pdf}
}

@book{kaihlavirtaMasteringRustWrite2017,
  title = {Mastering {{Rust}}: Write Safe, Concurrent and Reliable Programs without Compromising on Performance},
  shorttitle = {Mastering {{Rust}}},
  author = {Kaihlavirta, Vesa},
  year = {2017},
  publisher = {Packt Publishing},
  address = {Birmingham, UK},
  abstract = {Discover the powerful, hidden features of Rust you need to build robust, concurrent, and fast applications About This Book Learn how concurrency works in Rust and why it is safe Get to know the different philosophies of error handling and how to use them wisely After reading this book, you will be able to migrate your legacy C or C++ application to a Rust environment Who This Book Is For The target audience would be readers having knowledge of other programming languages and are able to work fluently in the operating system of their choice, be it Linux, OS X or Windows. Since Rust is a rather new language, they are interested in programming beyond simply using it for work. The book focuses on intermediate and advanced features of Rust. What You Will Learn Implement unit testing patterns with the standard Rust tools Get to know the different philosophies of error handling and how to use them wisely Appreciate Rust's ability to solve memory allocation problems safely without garbage collection Get to know how concurrency works in Rust and use concurrency primitives such as threads and message passing Use syntax extensions and write your own Create a Web application with Rocket Use Diesel to build safe database abstractions In Detail If concurrent programs are giving you sleepless nights, Rust is your go-to language. Being one of the first ever comprehensive books on Rust, it is filled with real-world examples and explanations, showing you how you can build scalable and reliable programs for your organization. We'll teach you intermediate to advanced level concepts that make Rust a great language. Improving performance, using generics, building macros, and working with threads are just some of the topics we'll cover. We'll talk about the official toolsets and ways to discover more. The book contains a mix of theory interspersed with hands-on tasks, so you acquire the skills as well as the knowledge. Since programming cannot be learned by just reading, we provide exercises (and solutions) to hammer the concepts in. After reading this book, you will be able to implement Rust for your enterprise project, deploy the software, and will know the best practices of coding in Rust. Style and approach This book is your one stop guide to the Rust programming language and covers advanced-level concepts in a detailed manner using real-world examples},
  isbn = {978-1-78588-137-4},
  langid = {english},
  annotation = {OCLC: 990784835},
  file = {/Users/isaac/Zotero/storage/LAVD5SML/Kaihlavirta - 2017 - Mastering Rust write safe, concurrent and reliabl.pdf}
}

@misc{kerkourBlackHatRust2021,
  title = {Black {{Hat Rust}}},
  author = {Kerkour, Sylvain},
  year = {2021},
  month = feb,
  journal = {Sylvain Kerkour},
  urldate = {2023-07-11},
  abstract = {Applied offensive security with the Rust programming language},
  howpublished = {https://kerkour.com/black-hat-rust},
  langid = {english},
  file = {/Users/isaac/Zotero/storage/596BE8FV/Kerkour - 2021 - Black Hat Rust.pdf;/Users/isaac/Zotero/storage/3M64QZNE/black-hat-rust.html}
}

@article{knuthAnalysisAlphabetaPruning1975,
  title = {An Analysis of Alpha-Beta Pruning},
  author = {Knuth, Donald E. and Moore, Ronald W.},
  year = 1975,
  journal = {Artificial Intelligence},
  volume = {6},
  number = {4},
  pages = {293--326},
  issn = {00043702},
  doi = {10.1016/0004-3702(75)90019-3},
  urldate = {2023-02-10},
  langid = {english},
  file = {/Users/isaac/Zotero/storage/CB5URRVH/Knuth and Moore - 1975 - An analysis of alpha-beta pruning.pdf}
}

@book{knuthArtComputerProgramming1997,
  title = {The Art of Computer Programming},
  author = {Knuth, Donald Ervin},
  year = {1997},
  edition = {3rd ed},
  publisher = {Addison-Wesley},
  address = {Reading, Mass},
  isbn = {978-0-201-89683-1 978-0-201-89684-8 978-0-201-89685-5},
  lccn = {QA76.6 .K64 1997},
  keywords = {Computer algorithms,Computer programming},
  file = {/Users/isaac/Zotero/storage/KG7B85AX/Knuth - 1997 - The art of computer programming.pdf}
}

@book{loveLinuxSystemProgramming2007,
  title = {Linux System Programming},
  author = {Love, Robert},
  year = {2007},
  edition = {1st ed},
  publisher = {O'Reilly},
  address = {Beijing ; Cambridge},
  isbn = {978-0-596-00958-8},
  lccn = {QA76.76.O63 L674 2007},
  keywords = {Linux,Operating systems (Computers)},
  annotation = {OCLC: ocm77257007},
  file = {/Users/isaac/Zotero/storage/WR3X6C3Z/Love_2007_Linux system programming.pdf}
}

@article{mackworthConsistencyNetworksRelations1977,
  title = {Consistency in Networks of Relations},
  author = {Mackworth, Alan K.},
  year = {1977},
  month = feb,
  journal = {Artificial Intelligence},
  volume = {8},
  number = {1},
  pages = {99--118},
  issn = {00043702},
  doi = {10.1016/0004-3702(77)90007-8},
  urldate = {2023-02-10},
  langid = {english},
  file = {/Users/isaac/Zotero/storage/NYI8N24N/Mackworth - 1977 - Consistency in networks of relations.pdf}
}

@book{matthewsCODEPRORUST2022,
  title = {{{CODE LIKE A PRO IN RUST}}},
  author = {MATTHEWS, {\relax BRENDEN}},
  year = {2022},
  publisher = {O'REILLY MEDIA},
  address = {S.l.},
  isbn = {978-1-61729-964-3},
  langid = {english},
  annotation = {OCLC: 1302741599},
  file = {/Users/isaac/Zotero/storage/WGKND5EY/MATTHEWS - 2022 - CODE LIKE A PRO IN RUST.pdf}
}

@book{matzingerHandsonDataStructures2019,
  title = {Hands-on Data Structures and Algorithms with {{Rust}}: Learn Programming Techniques to Build Effective, Maintainable, and Readable Code in {{Rust}} 2018},
  shorttitle = {Hands-on Data Structures and Algorithms with {{Rust}}},
  author = {Matzinger, Claus},
  year = {2019},
  publisher = {Packt Publishing},
  address = {Birmingham, UK},
  abstract = {Design and implement professional level programs by exploring modern data structures and algorithms in Rust. Key Features Use data structures such as arrays, stacks, trees, lists and graphs with real-world examples Learn the functional and reactive implementations of the traditional data structures Explore illustrations to present data structures and algorithms, as well as their analysis, in a clear, visual manner. Book Description Rust has come a long way and is now utilized in several contexts. Its key strengths are its software infrastructure and resource-constrained applications, including desktop applications, servers, and performance-critical applications, not forgetting its importance in systems' programming. This book will be your guide as it takes you through implementing classic data structures and algorithms in Rust, helping you to get up and running as a confident Rust programmer. The book begins with an introduction to Rust data structures and algorithms, while also covering essential language constructs. You will learn how to store data using linked lists, arrays, stacks, and queues. You will also learn how to implement sorting and searching algorithms. You will learn how to attain high performance by implementing algorithms to string data types and implement hash structures in algorithm design. The book will examine algorithm analysis, including Brute Force algorithms, Greedy algorithms, Divide and Conquer algorithms, Dynamic Programming, and Backtracking. By the end of the book, you will have learned how to build components that are easy to understand, debug, and use in different applications. What you will learn Design and implement complex data structures in Rust Analyze, implement, and improve searching and sorting algorithms in Rust Create and use well-tested and reusable components with Rust Understand the basics of multithreaded programming and advanced algorithm design Become familiar with application profiling based on benchmarking and testing Explore the borrowing complexity of implementing algorithms Who this book is for This book is for developers seeking to use Rust solutions in a practical/professional setting; who wants to learn essential Data Structures and Algorithms in Rust. It is for developers with basic Rust language knowledge, some experience in other programming languages is required},
  isbn = {978-1-78899-149-0},
  langid = {english},
  annotation = {OCLC: 1084677809},
  file = {/Users/isaac/Zotero/storage/9FG9RFYP/Matzinger - 2019 - Hands-on data structures and algorithms with Rust.pdf}
}

@book{mcnamaraRustActionSystems2021,
  title = {Rust in Action: Systems Programming Concepts and Techniques},
  shorttitle = {Rust in Action},
  author = {McNamara, Timothy Samuel},
  year = {2021},
  publisher = {Manning},
  address = {Shelter Island, NY},
  abstract = {"[A] hands-on guide to systems programming with Rust"--Page 4 of cover},
  isbn = {978-1-61729-455-6},
  lccn = {QA76.73.R87 M36 2021},
  keywords = {Computer programming,Rust (Computer program language),Systems programming (Computer science)},
  annotation = {OCLC: on1153044639},
  file = {/Users/isaac/Zotero/storage/ZHWRL5EX/McNamara - 2021 - Rust in action systems programming concepts and t.pdf}
}

@book{meiraghuramakrishnanmeijohannesgehrkezhu;zhoulizhu...[deng]yiShuJuKuGuanLiXiTongYuanLiYuSheJi2004,
  title = {{数据库管理系统原理与设计}},
  author = {{(美)Raghu Ramakrishnan, (美)Johannes Gehrke著 ; 周立柱 ... [等]译} and {罗摩克里希纳 Raghu Ramakrishnan} and {格尔基} and {周立柱} and {张志强} and {李超} and {王煜}},
  year = {2004},
  edition = {Di 1 ban},
  publisher = {清华大学出版社},
  address = {Beijing},
  abstract = {全书分为数据库基础, 应用程序开发, 存储与索引, 查询评估, 事务管理, 数据库设计与调整, 高级主题等七大部分, 对数据库的设计与使用, 数据库管理系统基本原理与实现技术, 以及数据库研究的新进展做了论述等},
  isbn = {978-7-302-07939-2},
  langid = {chi},
  annotation = {OCLC: 952670479},
  file = {/Users/isaac/Zotero/storage/LURIL3ZJ/(美)Raghu Ramakrishnan, (美)Johannes Gehrke著 ; 周立柱 ... [等]译 et al. - 2004 - 数据库管理系统原理与设计.pdf}
}

@book{messierBeginningRustProgramming2021,
  title = {Beginning Rust Programming},
  shorttitle = {Beginning Rust Programming},
  author = {Messier, Ric},
  year = {2021},
  edition = {1},
  publisher = {{John Wiley and Sons}},
  address = {Indianapolis},
  isbn = {978-1-119-71297-8},
  file = {/Users/isaac/Zotero/storage/2QDFHFG5/Messier - 2021 - Beginning rust programming.pdf}
}

@book{milanesiCreativeProjectsRust2020,
  title = {Creative Projects for {{Rust}} Programmers: Build Exciting Projects on Domains Such as Web Apps, {{WebAssembly}}, Games, and Parsing},
  shorttitle = {Creative Projects for {{Rust}} Programmers},
  author = {Milanesi, Carlo},
  year = {2020},
  publisher = {Packt},
  address = {Birmingham Mumbai},
  isbn = {978-1-78934-622-0},
  langid = {english},
  file = {/Users/isaac/Zotero/storage/5BVTS2UC/Milanesi - 2020 - Creative projects for Rust programmers build exci.pdf}
}

@book{mitchellWebScrapingPython2018,
  title = {Web Scraping with {{Python}}: Collecting More Data from the Modern Web},
  shorttitle = {Web Scraping with {{Python}}},
  author = {Mitchell, Ryan E.},
  year = {2018},
  edition = {Second edition},
  publisher = {O'Reilly Media},
  address = {Sebastopol, CA},
  abstract = {If programming is magic then web scraping is surely a form of wizardry. By writing a simple automated program, you can query web servers, request data, and parse it to extract the information you need. The expanded edition of this practical book not only introduces you web scraping, but also serves as a comprehensive guide to scraping almost every type of data from the modern web. Part I focuses on web scraping mechanics: using Python to request information from a web server, performing basic handling of the server's response, and interacting with sites in an automated fashion. Part II explores a variety of more specific tools and applications to fit any web scraping scenario you're likely to encounter},
  isbn = {978-1-4919-8557-1},
  lccn = {QA76.73.P98 M58 2018},
  keywords = {Automatic data collection systems,Data mining,Python (Computer program language)},
  annotation = {OCLC: on1032828499},
  file = {/Users/isaac/Zotero/storage/45TDGZD9/Mitchell - 2018 - Web scraping with Python collecting more data fro.pdf}
}

@book{obePostgreSQLRunningPractical2012,
  title = {{{PostgreSQL}}: Up and Running ; [a Practical Guide to the Advanced Open Source Database]},
  shorttitle = {{{PostgreSQL}}},
  author = {Obe, Regina O. and Hsu, Leo S.},
  year = {2012},
  edition = {1. ed},
  publisher = {O'Reilly},
  address = {Beijing K{\"o}ln},
  isbn = {978-1-4493-2633-3},
  langid = {english},
  file = {/Users/isaac/Zotero/storage/ZG4D583G/Regina Obe, Leo Hsu - PostgreSQL_ Up and Running (2012, O'Reilly Media) - libgen.li.pdf}
}

@book{palmieriZeroProductionRust2022,
  title = {Zero {{To Production In Rust}}: {{An}} Introduction to Backend Development},
  shorttitle = {Zero {{To Production In Rust}}},
  author = {Palmieri, Luca},
  year = {2022},
  month = mar,
  publisher = {Independently published},
  abstract = {About the bookZero To Production is the ideal starting point for your journey as a Rust backend developer.You will learn by doing: you will build a fully functional email newsletter API, starting from scratch.You'll learn how to:Navigate and leverage Rust's crates ecosystemStructure your application to make it modular and extensibleWrite tests, from single units to full-blown integration testsEnforce your domain invariants using Rust's type systemAuthenticate and authorize users of your APIImplement a robust error handling strategyObserve the state of your application using structured logsSet up an extensive continuous integration and continuous deployment pipeline for your Rust projectsThe book is composed of 11 chapters, for a grand total of 600 pages. All supporting code (including tests!) is available on GitHub.About the authorLuca Palmieri is a co-organiser of the Rust London User Group, an OpenSource contributor and a public speaker.Zero To Production In Rust is informed by his years of experience running tens of Rust services in production.Luca is also the author of several Rust crates and a workshop to get people started with Rust.FAQsCan I read the book if I have never used Rust before?Yes!Zero To Production does its best to explain the main language constructs and concepts along the way.If you have previous experience in another modern programming language and you keep the Rust book close you should not have any issue following along.If you are not sure, check out the book sample on the zero2prod website before buying.Do I need previous experience in backend development?Not at all!Zero To Production is designed as introduction to backend development: we do spend a significant amount of time talking about specific libraries and tools (we are doing it for real, after all!), but the underlying concepts and the rationale behind our choices are thoroughly explained, without assuming that the reader has worked on similar problems before. Check the book sample for a taste!I like to say that Zero To Production shows you how the pros do it: we talk at length about observability, ease of operation, system design issues - topics that are often skipped or merely mentioned in "hands-on" backend books.Is the paperback content in color?The paperback content is printed in black and white. There is syntax highlighting for code blocks using a grayscale palette.If you want a coloured edition, consider buying the ebook version instead.Does buying the paperback edition give me access to the ebook edition?No, there is no ebook + paperback bundle. The ebook version must be bought separately via the zero2prod website.Does buying the paperback edition give me access to book Discord server?No. Consider buying the ebook version via the zero2prod website if you want access to the book Discord server.},
  isbn = {9798847211437},
  langid = {english},
  file = {/Users/isaac/Zotero/storage/2QTRCFH6/Palmieri - 2022 - Zero To Production In Rust An introduction to bac.pdf}
}

@book{petrovDatabaseInternalsDeep2019,
  title = {Database Internals: A Deep Dive into How Distributed Data Systems Work},
  shorttitle = {Database Internals},
  author = {Petrov, Alex},
  year = {2019},
  edition = {First edition},
  publisher = {O'Reilly Media},
  address = {Sebastopol, CA},
  abstract = {"When it comes to choosing, using, and maintaining a database, understanding its internals is essential. But with so many distributed databases and tools available today, it's often difficult to learn what each one offers and how they differ. With this practical guide, Alex Petrov guides developers through the concepts behind modern database and storage engine internals. Throughout the book, you'll explore relevant material gleaned from numerous books, papers, blog posts, and the source code of several open source databases. You'll discover that the most significant distinctions among many modern databases reside in subsystems that determine how storage is organized and how data is distributed."--},
  isbn = {978-1-4920-4034-7},
  lccn = {QA76.9.D3 P49518 2019},
  keywords = {Database management,Database selection,Distributed databases,File organization (Computer science)},
  annotation = {OCLC: on1091370549},
  file = {/Users/isaac/Zotero/storage/6Y4ZLNSB/Petrov - 2019 - Database internals a deep dive into how distribut.pdf}
}

@book{raoGettingStartedProgramming2021,
  title = {Getting {{Started}} with {{V Programming}}},
  author = {Rao, Navule},
  year = {2021},
  edition = {1st edition},
  publisher = {Packt Publishing},
  abstract = {Learn a new statically compiled programming language to build maintainable and fast software with the help of this comprehensive guide to V programming Key Features Explore the features of the V programming language step by step with this beginner's guide Gain strong foundational knowledge of core programming concepts such as modules, functions, and structs Learn how to write super-fast programs and applications that compile in a matter of seconds Book Description A new language on the block, V comes with a promising set of features such as fast compilation and interoperability with other programming languages. This is the first book on the V programming language, packed with concise information and a walkthrough of all the features you need to know to get started with the language. The book begins by covering the fundamentals to help you learn about the basic features of V and the suite of built-in libraries available within the V ecosystem. You'll become familiar with primitive data types, declaring variables, arrays, and maps. In addition to basic programming, you'll develop a solid understanding of the building blocks of programming, including functions, structs, and modules in the V programming language. As you advance through the chapters, you'll learn how to implement concurrency in V Programming, and finally learn how to write test cases for functions. This book takes you through an end-to-end project that will guide you to build fast and maintainable RESTful microservices by leveraging the power of V and its built-in libraries. By the end of this V programming book, you'll be well-versed with the V programming language and be able to start writing your own programs and applications. What you will learn Become familiar with the basic building blocks of programming in the V language Install the V language on various operating systems Understand how to work with arrays and maps in V programming Discover how to implement concurrency in V programming Use channels in V programming to learn the best practices of sharing memory by communicating among coroutines Write modular code and build on your knowledge of structs and functions in V Get acquainted with writing tests in V programming Get to grips with building and querying RESTful microservice in V Who this book is for Whether you're a beginner interested in learning a programming language or an experienced programmer looking to switch to a new and better statically compiled programming la..},
  isbn = {978-1-83921-343-4},
  langid = {english},
  annotation = {OCLC: 1290492862},
  file = {/Users/isaac/Zotero/storage/EVCBRMWJ/Rao - 2021 - Getting Started with V Programming.pdf}
}

@book{silberschatzDatabaseSystemConcepts2020,
  title = {Database System Concepts},
  author = {Silberschatz, Abraham and Korth, Henry F. and Sudarshan, S.},
  year = {2020},
  edition = {Seventh edition},
  publisher = {McGraw-Hill Education},
  address = {New York, NY},
  isbn = {978-1-260-08450-4},
  langid = {english},
  file = {/Users/isaac/Zotero/storage/99DK2MLP/Silberschatz et al. - 2020 - Database system concepts.pdf;/Users/isaac/Zotero/storage/KK48N5AQ/Abraham Silberschatz, Henry Korth, S. Sudarshan - Database System Concepts-McGraw-Hill Education (2019).pdf}
}

@book{steeleBlackHatGo2020,
  title = {Black {{Hat Go}}: {{Go}} Programming for Hackers and Pentesters},
  shorttitle = {Black {{Hat Go}}},
  author = {Steele, Tom and Patten, Chris and Kottmann, Dan},
  year = {2020},
  publisher = {No Starch Press},
  address = {San Francisco},
  abstract = {"A guide to Go that begins by introducing fundamentals like data types, control structures, and error handling. Provides instruction on how to use Go for tasks such as sniffing and processing packets, creating HTTP clients, and writing exploits."--},
  isbn = {978-1-59327-865-6},
  lccn = {QA76.9.A25 S739 2020},
  keywords = {Go (Computer program language),Penetration testing (Computer security)},
  file = {/Users/isaac/Zotero/storage/UR5FWBDG/Steele et al. - 2020 - Black Hat Go Go programming for hackers and pente.pdf}
}

@book{tellesPythonProfessionalsHandson2020,
  title = {Python for {{Professionals}}: {{Hands-on Guide}} for {{Python Professionals}}},
  shorttitle = {Python for {{Professionals}}},
  author = {Telles, Matt},
  year = {2020},
  publisher = {BPB Publications},
  address = {Place of publication not identified},
  abstract = {Designed for programmers who have experience in at least one programming language, this book provides numerous tricks and tips that will make you a Python expert in no time. -- Edited summary from book},
  langid = {english},
  annotation = {OCLC: 1188989309},
  file = {/Users/isaac/Zotero/storage/MRFFMSWN/Telles - 2020 - Python for Professionals Hands-on Guide for Pytho.pdf}
}

@book{troutwineHandsonConcurrencyRust2018,
  title = {Hands-on Concurrency with {{Rust}}: Confidently Build Memory-Safe, Parallel, and Efficient Software in {{Rust}}},
  shorttitle = {Hands-on Concurrency with {{Rust}}},
  author = {Troutwine, Brian L.},
  year = {2018},
  publisher = {Packt Publishing},
  address = {Birmingham},
  isbn = {978-1-78839-997-5},
  langid = {english},
  file = {/Users/isaac/Zotero/storage/LCP6KX2S/Troutwine - 2018 - Hands-on concurrency with Rust confidently build .pdf}
}

@book{tsoukalosMasteringGoSecond2021,
  title = {Mastering {{Go}} - {{Second Edition}}},
  author = {Tsoukalos, Mihalis},
  year = {2021},
  edition = {2nd edition},
  publisher = {Packt Publishing},
  abstract = {Publisher's Note: This edition from 2019 is outdated and is not compatible with the latest version of Go. A new third edition, updated for 2021 and featuring the latest in Go programming, has now been published. Key Features Second edition of the bestselling guide to advanced Go programming, expanded to cover machine learning, more Go packages and a range of modern development techniques Completes the Go developer's education with real-world guides to building high-performance production systems Packed with practical examples and patterns to apply to your own development work Clearly explains Go nuances and features to remove the frustration from Go development Book Description Often referred to (incorrectly) as Golang, Go is the high-performance systems language of the future. Mastering Go, Second Edition helps you become a productive expert Go programmer, building and improving on the groundbreaking first edition. Mastering Go, Second Edition shows how to put Go to work on real production systems. For programmers who already know the Go language basics, this book provides examples, patterns, and clear explanations to help you deeply understand Go's capabilities and apply them in your programming work. The book covers the nuances of Go, with in-depth guides on types and structures, packages, concurrency, network programming, compiler design, optimization, and more. Each chapter ends with exercises and resources to fully embed your new knowledge. This second edition includes a completely new chapter on machine learning in Go, guiding you from the foundation statistics techniques through simple regression and clustering to classification, neural networks, and anomaly detection. Other chapters are expanded to cover using Go with Docker and Kubernetes, Git, WebAssembly, JSON, and more. If you take the Go programming language seriously, the second edition of this book is an essential guide on expert techniques. What you will learn Clear guidance on using Go for production systems Detailed explanations of how Go internals work, the design choices behind the language, and how to optimize your Go code A full guide to all Go data types, composite types, and data structures Master packages, reflection, and interfaces for effective Go programming Build high-performance systems networking code, including server and client-side applications Interface with other systems using WebAssembly, JSON, and gRPC Write reliable, high-performance concurrent code Buil ..},
  langid = {english},
  annotation = {OCLC: 1277511992},
  file = {/Users/isaac/Zotero/storage/DSQAQ9MF/Tsoukalos - 2021 - Mastering Go - Second Edition.pdf}
}

@book{youens-clarkCommandlineRustProjectbased2022,
  title = {Command-Line {{Rust}}: A Project-Based Primer for Writing {{Rust CLIs}}},
  shorttitle = {Command-Line {{Rust}}},
  author = {{Youens-Clark}, Ken},
  year = {2022},
  edition = {First edition},
  publisher = {O'Reilly Media},
  address = {Sebastopol, CA},
  abstract = {For several consecutive years, Rust has been voted "most loved programming language" in Stack Overflow's annual developer survey. This open source systems programming language is now used for everything from game engines and operating systems to browser components and virtual reality simulation engines. But Rust is also an incredibly complex language with a notoriously difficult learning curve. Rather than focusing on the language as a whole, this guide teaches Rust using a single small, complete, focused program in each chapter. Author Ken Youens-Clark shows you how to start, write, and test each of these programs to create a finished product. You'll learn how to handle errors in Rust, read and write files, and use regular expressions, Rust types, structs, and more. Discover how to: Use Rust's standard libraries and data types such as numbers, strings, vectors, structs, Options, and Results to create command-line programs ; Write and test Rust programs and functions ; Read and write files, including stdin, stdout, and stderr ; Document and validate command-line arguments ; Write programs that fail gracefully ; Parse raw and delimited text manually, using regular expressions and Rust crates ; Use and control randomness},
  isbn = {978-1-09-810943-1},
  lccn = {QA76.73.R87 Y68 2022},
  keywords = {Interfaces utilisateurs (Informatique),Rust (Computer program language),Rust (Langage de programmation),User interfaces (Computer systems),User-Computer Interface},
  annotation = {OCLC: on1289262807},
  file = {/Users/isaac/Zotero/storage/DV89WV6R/Youens-Clark - 2022 - Command-line Rust a project-based primer for writ.pdf}
}
